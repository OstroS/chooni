<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:security="http://www.springframework.org/schema/security"
             xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
                http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">
    
    <!-- konfiguracja beana wczytujacego propertiesy -->
    <beans:bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <beans:property name="location" value="/WEB-INF/application.properties" />
    </beans:bean> 
    
    <beans:bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <beans:property name="formatters">
            <beans:set>
                <beans:ref bean="kindFormatter"/>
                <beans:ref bean="profileFormatter" />
                <beans:ref bean="facebookProfileFormatter" />
            </beans:set>
        </beans:property>
    </beans:bean>
    
    <!-- Enables the Spring MVC @Controller programming model -->
    <annotation-driven conversion-service="conversionService" />
     
    <context:component-scan base-package="pl.akiba.frontend.expenses.controller" />
    <context:component-scan base-package="pl.akiba.frontend.expenses.service" />
    <context:component-scan base-package="pl.akiba.wsclient.api.impl" />
    <context:component-scan base-package="pl.akiba.wsclient.api.mock" />
    
    <context:component-scan base-package="pl.akiba.frontend.facebook.controller" />
    <context:component-scan base-package="pl.akiba.frontend.facebook.service" />
    <context:component-scan base-package="pl.akiba.frontend.users" />
    
    <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/jsp/" />
        <beans:property name="suffix" value=".jsp" />
    </beans:bean>	

    <beans:bean id="jsonConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
        <beans:property name="supportedMediaTypes" value="application/json" />
    </beans:bean>
    
    <beans:bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
        <beans:property name="messageConverters">
            <beans:list>
                <beans:ref bean="jsonConverter" />
            </beans:list>
        </beans:property>
    </beans:bean>

    
    <beans:bean class="pl.akiba.frontend.facebook.controller.FacebookAuthenticationFilter" id="facebookAuthenticationFilter">
        <beans:property name="authenticationManager" ref="authenticationManager" />
        <beans:property name="authenticationFailureHandler" ref="failureHandler" />
        <beans:property name="authenticationSuccessHandler" ref="successHandler" />
        
        <!-- here user is redirected after validation of his facebook credentials -->
        <beans:property name="filterProcessesUrl" value="/j_spring_security_check"/>
        <beans:property name="facebookLoginService" ref="FacebookLoginService" />
    </beans:bean>

    <beans:bean id="successHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
        <beans:property name="defaultTargetUrl" value="/" />
    </beans:bean>
    
    <beans:bean id="failureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler" >
        <beans:property name="defaultFailureUrl" value="/login?login_error=true" />
    </beans:bean>
    
    <!-- URL where login process is started -->
    <beans:bean id="loginUrlAuthenticationEntryPoint"
        class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <beans:property name="loginFormUrl" value="/fb/login" />
    </beans:bean>
    
    <!-- access list with priviligies and login filters configuration -->
    <security:http auto-config="false" use-expressions="true" entry-point-ref="loginUrlAuthenticationEntryPoint">
        <security:custom-filter position="FORM_LOGIN_FILTER" ref="facebookAuthenticationFilter" />
        <security:intercept-url pattern="/dashboard" access="hasRole('ROLE_USER')" />
        <security:intercept-url pattern="/expense/*" access="hasRole('ROLE_USER')" /> 
        <security:intercept-url pattern="/kind/*" access="hasRole('ROLE_USER')" /> 
    </security:http>
    
  
    <security:authentication-manager  alias="authenticationManager">
        <security:authentication-provider ref="FacebookAuthenticationProvider"/>
    </security:authentication-manager>
</beans:beans>
